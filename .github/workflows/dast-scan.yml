name: DAST scam woth OWASP ZAP

# This workflow triggers on a pull request that targets the 'master' brnach 
on:
  pull_request:
    branches: [ master ]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Run DAST scan

    steps:
  # Step 1: Check out the code from the pull request
      - name: Checkout code
        uses: actions/checkout@v3
        with: 
          ref: ${{ github.event.pull_request.head.sha }}

  # Step 2: Set up node.js environment to run the application
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19'

  # Step 3: Install application dependencies 
      - name: Install Dependencies 
        run: npm install 

  # Step 4: Start the application in the background 
      - name: Start Application
        run: npm start &

  # Step 5: Wait for the application to be ready
      - name: Wait for the application to start
        run: |
          echo "Waiting for applciation to start on port 3000.."
          timeout=60
          while ! curl -s "http://localhost:3000"; do
            sleep 5
            timeout= $((timeout-5))
            if [ $timeout -le 0]; then
              echo "Error: Application did not start within the timeout period"
              exit 1
            fi 
            exho "still waiting..."
          done
          echo "Application is up and running"
      #  run: sleep 30 

  # Step 6 : Run the OWASP ZAP BAseline Scan 
      - name: ZAP Baseline scan 
        uses: zaproxy/action-baseline@v0.10.0
        with: 
      # Target the locally running application 
          target: 'http://localhost:3000'
          cmd_options: '-J ${{ github.workspace }}/report.json'
 
  #Step 7: upload the zap report as a workflow artificat 
 #     - name: Upload ZAP Report 
  #      if: always() # will ensure this step runs even if the zap scan fails to the build 
   #     uses: actions/upload-artifact@v4
    #    with:
     #     name: zap-scan-report
      #    path: report.json

      - name: List file in workspace 
        if: always() # will ensure this step runs even if the zap scan fails to the build 
        run: ls -IR 

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: ${{ github.workspace }}/report.json
